<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[罗永浩《我的奋斗》]]></title>
      <url>http://yoursite.com/2016/06/07/%E7%BD%97%E6%B0%B8%E6%B5%A9%E3%80%8A%E6%88%91%E7%9A%84%E5%A5%8B%E6%96%97%E3%80%8B/</url>
      <content type="html"><![CDATA[<h4 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h4><ol>
<li>后来。。。后来我想到生活的一个令人不安的真相：在这个世界上，坏人好像总是更勤奋一点。</li>
<li>另外，我还做了一个准备就是，我和所有人一样，都是懒惰的、容易放弃的、坚持不下去的、没有毅力的。这个你也不用感到自卑，因为我们从基因上就是被设计成这样的。我们生来就是懒惰的。这本来是一个金花的需要，你不用为此感到难过，我们都是受这个控制的。</li>
<li>如果我们想获得持续的人生进步，保持这种美好的、亢奋的状态，最好就是每三天听一场热血沸腾的人生励志讲座。</li>
<li>我平时是不看这些书的，但你要明白一点就是，当你定下一个艰巨的、阶段性的计划的时候，有这么几本书放在床边，绝对是最好的精神鸦片。你不要迷信那些成功学大师，都是江湖骗子。你备着那么几本书的好处就是，你什么时候坚持不下去了，随手拿起来一翻，就像精神鸦片给你打一针，又能坚持三天。</li>
</ol>
<h4 id="一些书"><a href="#一些书" class="headerlink" title="一些书"></a>一些书</h4><ol>
<li>《罗马帝国衰亡史》</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eclipse快捷键]]></title>
      <url>http://yoursite.com/2016/06/06/Eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      <content type="html"><![CDATA[<h3 id="Eclipse-常用快捷键"><a href="#Eclipse-常用快捷键" class="headerlink" title="Eclipse 常用快捷键"></a>Eclipse 常用快捷键</h3><h4 id="一、编辑"><a href="#一、编辑" class="headerlink" title="一、编辑"></a>一、编辑</h4><a id="more"></a> 
<table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+1</td>
<td>快速修复（最经典的快捷键,就不用多说了，可以解决很多问题，比如import类、try catch包围等）</td>
</tr>
<tr>
<td>Ctrl+Shift+F</td>
<td>格式化当前代码</td>
</tr>
<tr>
<td>Ctrl+Shift+M</td>
<td>添加类的import导入</td>
</tr>
<tr>
<td>Ctrl+Shift+O</td>
<td>组织类的import导入（既有Ctrl+Shift+M的作用，又可以帮你去除没用的导入，很有用）</td>
</tr>
<tr>
<td>Ctrl+Y</td>
<td>重做（与撤销Ctrl+Z相反）</td>
</tr>
<tr>
<td>Alt+/</td>
<td>内容辅助（帮你省了多少次键盘敲打，太常用了）</td>
</tr>
<tr>
<td>Ctrl+D</td>
<td>删除当前行或者多行</td>
</tr>
<tr>
<td>Alt+↓</td>
<td>当前行和下面一行交互位置（特别实用,可以省去先剪切,再粘贴了）</td>
</tr>
<tr>
<td>Alt+↑</td>
<td>当前行和上面一行交互位置（同上）</td>
</tr>
<tr>
<td>Ctrl+Alt+↓</td>
<td>复制当前行到下一行（复制增加）</td>
</tr>
<tr>
<td>Ctrl+Alt+↑</td>
<td>复制当前行到上一行（复制增加）</td>
</tr>
<tr>
<td>Shift+Enter</td>
<td>在当前行的下一行插入空行（这时鼠标可以在当前行的任一位置,不一定是最后）</td>
</tr>
<tr>
<td>Ctrl+/</td>
<td>注释当前行,再按则取消注释</td>
</tr>
</tbody>
</table>
<h4 id="二、导航"><a href="#二、导航" class="headerlink" title="二、导航"></a>二、导航</h4><table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+Shift+T</td>
<td>搜索类（包括工程和关联的第三jar包）</td>
</tr>
<tr>
<td>Ctrl+Shift+R</td>
<td>搜索工程中的文件</td>
</tr>
<tr>
<td>Ctrl+E</td>
<td>快速显示当前Editer的下拉列表（如果当前页面没有显示的用黑体表示）</td>
</tr>
<tr>
<td>F4</td>
<td>打开类型层次结构</td>
</tr>
<tr>
<td>F3</td>
<td>跳转到声明处</td>
</tr>
<tr>
<td>Alt+←</td>
<td>前一个编辑的页面</td>
</tr>
<tr>
<td>Alt+→</td>
<td>下一个编辑的页面（当然是针对上面那条来说了）</td>
</tr>
<tr>
<td>Ctrl+PageUp/PageDown</td>
<td>在编辑器中，切换已经打开的文件</td>
</tr>
</tbody>
</table>
<h4 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a>三、其他</h4><table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Alt+Enter</td>
<td>显示当前选择资源的属性，windows下的查看文件的属性就是这个快捷键，通常用来查看文件在windows中的实际路径</td>
</tr>
<tr>
<td>Ctrl+↑</td>
<td>文本编辑器 上滚行</td>
</tr>
<tr>
<td>Ctrl+↓</td>
<td>文本编辑器 下滚行</td>
</tr>
<tr>
<td>Ctrl+M</td>
<td>最大化当前的Edit或View （再按则反之）</td>
</tr>
<tr>
<td>Ctrl+O</td>
<td>快速显示 OutLine（不开Outline窗口的同学，这个快捷键是必不可少的）</td>
</tr>
<tr>
<td>Ctrl+T</td>
<td>快速显示当前类的继承结构</td>
</tr>
<tr>
<td>Ctrl+W</td>
<td>关闭当前Editer（windows下关闭打开的对话框也是这个，还有qq、旺旺、浏览器等都是）</td>
</tr>
<tr>
<td>Ctrl+L</td>
<td>文本编辑器 转至行</td>
</tr>
</tbody>
</table>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul>
<li><a href="http://www.runoob.com/eclipse/eclipse-shortcuts.html" target="_blank" rel="external">Eclipse 快捷键</a></li>
<li><a href="http://blog.csdn.net/abbuggy/article/details/7016185" target="_blank" rel="external">eclipse中格式化代码快捷键Ctrl+Shift+F失效的解决办法</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 调试技巧]]></title>
      <url>http://yoursite.com/2016/06/02/JavaScript-%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<h4 id="常见操作"><a href="#常见操作" class="headerlink" title="常见操作"></a>常见操作</h4><ol>
<li><p>debugger;</p>
<p>我以前也说过，你可以在JavaScript代码中加入一句debugger;来手工造成一个断点效果。<br>需要带有条件的断点吗？你只需要用if语句包围它：</p>
</li>
</ol>
<a id="more"></a> 
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (somethingHappens) &#123;</span><br><span class="line">	debugger;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但要记住在程序发布前删掉它们。</p>
<p>2.设置在DOM node发生变化时触发断点</p>
<p>有时候你会发现DOM不受你的控制，自己会发生一些奇怪的变化，让你很难找出问题的根源。</p>
<p>谷歌浏览器的开发工具里有一个超级好用的功能，专门可以对付这种情况，叫做“Break on…”，你在DOM节点上右键，就能看到这个菜单项。</p>
<p>断点的触发条件可以设置成这个节点被删除、节点的属性有任何变化，或它的某个子节点有变化发生。</p>
<p><img src="pitcures/e59002ebcd7e6b7b803ac9735291a57a.jpg" alt=""></p>
<p><a href="http://blog.jobbole.com/61737/" target="_blank" rel="external">JavaScript程序员必备的5个debug技巧</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tomcat基础]]></title>
      <url>http://yoursite.com/2016/06/01/Tomcat%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h3 id="一、清理"><a href="#一、清理" class="headerlink" title="一、清理"></a>一、清理</h3><ol>
<li>直接删除work下面的Catalina文件夹;</li>
<li>也可以删除Tomcat根目录下面的webapps文件夹下面的非当前应用，因为如果不更改tomcat发布位置的话，是默认发布到这个文件下面的。</li>
</ol>
<a id="more"></a> 
<h3 id="二、常见设置"><a href="#二、常见设置" class="headerlink" title="二、常见设置"></a>二、常见设置</h3><p>1.将应用发布到指定位置:</p>
<blockquote>
<p><code>Server Location</code>  → <code>Use Tomcat installation</code>  →  <code>Server path</code> 设置到具体位置</p>
</blockquote>
<h3 id="三、扩展阅读"><a href="#三、扩展阅读" class="headerlink" title="三、扩展阅读"></a>三、扩展阅读</h3><ul>
<li><a href="http://www.cnblogs.com/xdp-gacl/p/3734395.html" target="_blank" rel="external">JavaWeb学习总结(二)——Tomcat服务器学习和使用(一)</a></li>
<li><a href="http://www.cnblogs.com/xdp-gacl/p/3744053.html" target="_blank" rel="external">JavaWeb学习总结(三)——Tomcat服务器学习和使用(二)</a></li>
<li><a href="http://www.cnblogs.com/maypattis/p/5549613.html" target="_blank" rel="external">理解tomcat之搭建简易http服务器</a></li>
<li><a href="http://item.jd.com/10100538.html" target="_blank" rel="external">Tomcat权威指南（第2版）</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[javascript之QUnit单元测试]]></title>
      <url>http://yoursite.com/2016/05/31/javascript%E4%B9%8BQUnit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript中undefined 、 null 和 NaN的区别]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E4%B8%ADundefined-%E5%92%8C-null%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<h4 id="一、区别"><a href="#一、区别" class="headerlink" title="一、区别"></a>一、区别</h4><p>   Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。<br>Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</p>
<ul>
<li>js 代码<br><pre><code><br>var oValue;<br>alert(oValue == undefined); //output “true”<br></code></pre><br>这段代码显示为true,代表oVlaue的值即为undefined，因为我们没有初始化它。  </li>
</ul>
<a id="more"></a> 
<ul>
<li><p>js 代码</p>
<p><code>alert(null == document.getElementById(&#39;notExistElement&#39;));</code> </p>
<p>当页面上不存在id为”notExistElement”的DOM节点时，这段代码显示为”true”，因为我们尝试获取一个不存在的对象。</p>
</li>
<li><p>js 代码</p>
<pre><code>    
alert(typeof undefined); //output "undefined"  
alert(typeof null); //output "object"  
</code></pre>

</li>
</ul>
<p>第一行代码很容易理解，undefined的类型为Undefined；第二行代码却让人疑惑，为什么null的类型又是Object了呢？其实这是JavaScript最初实现的一个错误，后来被ECMAScript沿用下来。在今天我们可以解释为，null即是一个不存在的对象的占位符，但是在实际编码时还是要注意这一特性。</p>
<ul>
<li><p>js 代码</p>
<p><code>alert(null == undefined); //output &quot;true&quot;</code></p>
</li>
</ul>
<p>ECMAScript认为undefined是从null派生出来的，所以把它们定义为相等的。但是，如果在一些情况下，我们一定要区分这两个值，那应该怎么办呢？可以使用下面的两种方法。</p>
<ul>
<li><p>js 代码</p>
<pre><code>    
alert(null === undefined); //output "false"  
alert(typeof null == typeof undefined); //output "false"  
</code></pre>

</li>
</ul>
<p>使用typeof方法在前面已经讲过，null与undefined的类型是不一样的，所以输出”false”。而===代表绝对等于，在这里null === undefined输出false。</p>
<h4 id="二、判断"><a href="#二、判断" class="headerlink" title="二、判断"></a>二、判断</h4><p>####1. 判断undefiend</p>
<ol>
<li>利用typeof函数</li>
</ol>
<pre><code>    
var exp = undefined; 
if (typeof(exp) == "undefined"){  
  alert("undefined"); 
 } 
</code>
</pre>

<ol>
<li>利用 <code>===</code></li>
</ol>
<pre><code>    
var exp = undefined; 
if (exp === undefined){  
  alert("undefined"); 
 } 
</code>
</pre>

<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote>
<p>alert(null == undefined); //output “true”<br>alert(null === undefined); //output “false” </p>
</blockquote>
<h4 id="2-判断null"><a href="#2-判断null" class="headerlink" title="2. 判断null"></a>2. 判断null</h4><pre><code>    
var exp = null; 
if (exp === null) {
alert("exp is null");
}　
</code>
</pre>

<h4 id="3-判断NaN"><a href="#3-判断NaN" class="headerlink" title="3. 判断NaN"></a>3. 判断NaN</h4><pre><code>    
var parm= 0/0;  
if(isNaN(parm)){  
    alert("i am NaN");  
}
</code></pre>

<p><a href="http://www.cnblogs.com/mountain-mist/articles/1600995.html" target="_blank" rel="external">JS 中如何判断 undefined 和 null</a><br><a href="http://www.cnblogs.com/eastday/archive/2010/03/03/1677324.html" target="_blank" rel="external">JS中Null与Undefined的区别</a><br><a href="http://www.cnblogs.com/rookiebob/p/3888409.html" target="_blank" rel="external">聊一聊js中的null、undefined与NaN</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript常处理操作]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E5%B8%B8%E5%A4%84%E7%90%86%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="常见操作"><a href="#常见操作" class="headerlink" title="常见操作"></a>常见操作</h3><h4 id="一、数组去重"><a href="#一、数组去重" class="headerlink" title="一、数组去重"></a>一、数组去重</h4><p><a href="http://tingbuqing.com/javascript-delete-array.html" target="_blank" rel="external">JavaScript删除数组重复元素的5个高效算法</a></p>
<h4 id="二、合并相邻点"><a href="#二、合并相邻点" class="headerlink" title="二、合并相邻点"></a>二、合并相邻点</h4><h4 id="三、自己实现分页"><a href="#三、自己实现分页" class="headerlink" title="三、自己实现分页"></a>三、自己实现分页</h4><h4 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript常见函数]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><ol>
<li>parseInt函数</li>
</ol>
<ol>
<li><p>setTimeout函数</p>
</li>
<li><p>try…catch</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript数组常见曹组]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E6%95%B0%E7%BB%84%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="JavaScript-数组常用函数"><a href="#JavaScript-数组常用函数" class="headerlink" title="JavaScript 数组常用函数"></a>JavaScript 数组常用函数</h3><ol>
<li><p>数组的创建</p>
<p> <code>var arrayObj = new Array();　//创建一个数组</code><br> <code>var arrayObj = new Array([size]);　//创建一个数组并指定长度，注意不是上限，是长度</code><br> <code>var arrayObj = new Array([element0[, element1[, ...[, elementN]]]]);　//创建一个数组并赋值</code> </p>
<p> <strong>用的比较多的是：var arrayObj = [];</strong>  </p>
</li>
<li><p>数组元素的添加</p>
<p> <code>arrayObj. push([item1);// 将一个或多个新元素添加到数组结尾，并返回数组新长度</code><br> <code>arrayObj.unshift([item1]);// 将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度</code><br> <code>arrayObj.splice(insertPos,0,[item1[, item2[, . . . [,itemN]]]]);//将一个或多个新元素插入到数组的指定位置，插入位置的元素自动后移，返回&quot;&quot;</code> </p>
</li>
<li><p>数组元素的删除<br><code>arrayObj.pop(); //移除最后一个元素并返回该元素值</code><br><code>arrayObj.shift(); //移除最前一个元素并返回该元素值，数组中元素自动前移</code><br><code>arrayObj.splice(deletePos,deleteCount); //删除从指定位置deletePos开始的指定数量deleteCount的元素，数组形式返回所移除的元素</code> </p>
</li>
<li><p>数组元素的截取和合并<br> <code>arrayObj.slice(start, [end]); //以数组的形式返回数组的一部分，注意不包括 end 对应的元素，如果省略 end 将复制 start 之后的所有元素</code><br> <code>arrayObj.concat([item1[, item2[, . . . [,itemN]]]]); //将多个数组（也可以是字符串，或者是数组和字符串的混合）连接为一个数组，返回连接好的新的数组</code> </p>
</li>
<li><p>数组的拷贝<br> <code>arrayObj.slice(0); //返回数组的拷贝数组，注意是一个新的数组，不是指向</code><br> <code>arrayObj.concat(); //返回数组的拷贝数组，注意是一个新的数组，不是指向</code> </p>
</li>
<li><p>数组元素的排序<br> <code>arrayObj.reverse(); //反转元素（最前的排到最后、最后的排到最前），返回数组地址</code><br> <code>arrayObj.sort(); //对数组元素排序，返回数组地址</code> </p>
</li>
<li><p>数组元素的字符串化<br> <code>arrayObj.join(separator); //返回字符串，这个字符串将数组的每一个元素值连接在一起，中间用 separator 隔开</code><br> <code>toLocaleString 、toString 、valueOf：可以看作是join的特殊用法，不常用</code></p>
</li>
</ol>
<p><a href="http://www.cnblogs.com/qiantuwuliang/archive/2011/01/08/1930499.html" target="_blank" rel="external">js数组的操作</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Endnote使用记录]]></title>
      <url>http://yoursite.com/2016/05/30/Endnote%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><h3 id="安装和破解"><a href="#安装和破解" class="headerlink" title="安装和破解"></a>安装和破解</h3><ol>
<li>下载最新版的EndNote： <code>ENX7Inst_V17.4.0.8818_setup.1441785781</code>;</li>
<li>拷贝破解文件: <code>EndNote.exe</code>、<code>License.dat</code>到Endnote安装目录    <code>C:\Program Files (x86)\EndNote X7</code>;</li>
</ol>
<a id="more"></a>
<ol>
<li>在word 2007 中手工添加endnote加载项：<ul>
<li>word 左上角的word选项 → 信任中心 → 信任中心设置</li>
<li>受信任位置 → 找到 <code>C:\Users\chuang\AppData\Roaming\Microsoft\Word\Startup\</code> 选项，在exploer中打开这个地址，用于复制Endnote的模板.</li>
</ul>
</li>
<li>关闭所有的OFFICE系列软件;</li>
<li>找到 <code>C:\Program Files (x86)\Common Files\ResearchSoft\Cwyw\17</code>下面的四个文件:<code>EndNote Cwyw.dot</code>、<code>EndNote Cwyw.dotm</code>、<code>EndNote Online Cwyw.dot</code>、<code>EndNote Online Cwyw.dotm</code>拷贝到<code>C:\Users\chuang\AppData\Roaming\Microsoft\Word\Startup\</code> 下(如果有其他文件也一并拷贝过去)。</li>
<li><p>找到 <code>C:\Program Files (x86)\EndNote X7\Product-Support\CWYW \Cwyw_x64.dat</code>,将其后缀名改为rar,解压<code>Cwyw_x64.rar</code>,拷贝<code>EndNote Cwyw.dll</code>到 <code>C:\Users\chuang\AppData\Roaming\Microsoft\Word\Startup\</code> 下，并注册之。</p>
</li>
<li><p>重启Office 2007.</p>
</li>
</ol>
<h5 id="参考目录"><a href="#参考目录" class="headerlink" title="参考目录"></a>参考目录</h5><ul>
<li><a href="http://jingyan.baidu.com/article/77b8dc7fe913036174eab6cd.html" target="_blank" rel="external">Endote文件夹中找不到EndNote Cwyw.dll</a> </li>
<li><a href="http://jingyan.baidu.com/article/a378c960bf582db328283093.html" target="_blank" rel="external">word 2013如何添加破解EndNote X7</a></li>
</ul>
<hr>
<h3 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eclipse反编译]]></title>
      <url>http://yoursite.com/2016/05/27/Eclipse%E5%8F%8D%E7%BC%96%E8%AF%91/</url>
      <content type="html"><![CDATA[<ul>
<li>需要 <code>jad.exe</code> 和 <code>net.sf.jadclipse_3.3.0.jar</code>  </li>
</ul>
<h3 id="eclipse版本"><a href="#eclipse版本" class="headerlink" title="eclipse版本"></a>eclipse版本</h3><ol>
<li>JAD.exe 放入JDK bin下面</li>
<li>jar  放入  eclipse安装目录下 plugins</li>
</ol>
<a id="more"></a>
<ol>
<li>路径：preferences-java-jadclipse<ul>
<li>path to decompiler:jad.exe全路径</li>
<li>directory fro temporary files:临时文件路径</li>
</ul>
</li>
<li>class文件的默认打开方式，Eclipse-&gt;Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;File Associations  <ul>
<li>.class  和 .class without source 都要改成 jadClipse Class File Viewer(default)</li>
</ul>
</li>
</ol>
<hr>
<h3 id="Myeclipse版本"><a href="#Myeclipse版本" class="headerlink" title="Myeclipse版本"></a>Myeclipse版本</h3><ol>
<li><p>JAD.exe 放入JDK bin下面   </p>
</li>
<li><p>在myeclipse安装目录下的dropins中创建eclipse文件夹，然后在eclipse文件夹中分别创建features、plugins文 件夹，将net.sf.jadclipse_3.3.0.jar 分别拷贝到features和plugins文件夹中。</p>
</li>
<li>路径：preferences-java-jadclipse<ul>
<li>path to decompiler:jad.exe全路径</li>
<li>directory fro temporary files:临时文件路径</li>
</ul>
</li>
<li>class文件的默认打开方式，Eclipse-&gt;Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;File Associations  <ul>
<li>.class  和 .class without source 都要改成 </li>
<li>jadClipse Class File Viewer(default)</li>
</ul>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[markdown 精简版]]></title>
      <url>http://yoursite.com/2016/05/26/Markdown%20%E7%B2%BE%E7%AE%80%E7%89%88/</url>
      <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p> 加# 和空格</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格。</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>只需要在文本前加入 &gt; 这种尖括号（大于号）即可</p>
<a id="more"></a> 
<h2 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h2><p>插入链接与插入图片的语法很像，区别在一个 !号</p>
<p>图片为：<code>![](){ImgCap}{/ImgCap}</code></p>
<ul>
<li>如果不想使用图床，可以使用相对路径来显示图片。</li>
</ul>
<p>链接为：    <code>[]()</code></p>
<h2 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h2><p>Markdown 的粗体和斜体也非常简单，用两个<code>*</code>包含一段文本就是粗体的语法，用一个 <code>*</code> 包含一段文本就是斜体的语法。</p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><blockquote>
<p>| Tables        | Are           | Cool  | <br><br>| ————- |————- | —– | <br><br>| col 3 is      | right-aligned | $1600 | <br><br>| col 2 is      | centered      |   $12 | <br><br>| zebra stripes | are neat      |    $1 | <br></p>
</blockquote>
<h2 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h2><p>如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown下实现也非常简单，只需要用两个 ` 把中间的代码包裹起来。图例：</p>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><ol>
<li><code>&lt;pre&gt;&lt;code&gt;  代码块   &lt;/code&gt;&lt;/pre&gt;</code></li>
<li>行首空4个空格</li>
<li>代码块包裹在 ``` 之间</li>
</ol>
<h4 id="使用-tab-键即可缩进。"><a href="#使用-tab-键即可缩进。" class="headerlink" title="使用 tab 键即可缩进。"></a>使用 tab 键即可缩进。</h4><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>分割线的语法只需要三个 * 号 </p>
<p>[Markdown——入门指南] (<a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="external">http://www.jianshu.com/p/1e402922ee32/</a>)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git 精简版]]></title>
      <url>http://yoursite.com/2016/05/26/Git%20%E7%B2%BE%E7%AE%80%E7%89%88/</url>
      <content type="html"><![CDATA[<ol>
<li>git init    //初始化</li>
<li>git add     //添加文件到暂存区</li>
<li>git commit  //提交更改，并备注</li>
</ol>
<a id="more"></a> 
<hr>
<ol>
<li>git status  //查看工作区状态</li>
<li>git diff    //查看修改  </li>
<li>(1)  git log    // 查看历史记录</li>
<li>(2)  git log –pretty=oneline  //精简版历史记录</li>
<li>(3)  git reset –HEAD^    //返回上一个版本    HEAD指向当前版本   –&gt;reset也是操作本地版本，只有push、pull、fetch才能与远程有关</li>
<li>(4)  cat readme.txt     //打印readme.txt 文件</li>
<li>(5)  git reflog     //查看提交的每一次记录</li>
</ol>
<hr>
<ol>
<li>(1)  git diff HEAD – readme.txt   //查看工作区和版本库里面最新版本的区别</li>
<li><p>(2)  git checkout – readme.txt   //丢弃工作区的修改  “只要add后，用checkout命令，就不会丢弃。”</p>
</li>
<li><p>(3)  git reset HEAD ( – )readme.txt    //丢弃暂存区的修改，放回到工作区</p>
</li>
<li>(4)  git reset  – HEAD^          //版本回退(这也是一种丢弃工作区的修改，不过这个可以回退到多个前面的版本，如HEAD^^) 前提是你没有推送到远程库 </li>
<li>(1)  git rm test.txt           //删除提交到版本库中的文件 </li>
<li>(1)  git remote add origin git@git.suncreate.com:yangliangchuang/MapTest.git  //关联本地库到远程库<br>(2)  git push -u origin master   //第一次推送本地库到远程库   远程库的名字是origin   master是本地库的名字<br>(3)  git push origin master  //非第一次提交 </li>
<li><p>(1)  git clone git@git.suncreate.com:yangliangchuang/MapTest.git     //克隆一个本地库</p>
</li>
<li><p>(1)  git checkout -b dev   //相当于 (2)  (3)<br>(2)  git branch dev       //新建一个分支，git branch * 打印所有分支<br>(3)  git checkout dev<br>(4)  git merge dev     //合并分支<br>(5)  git branch -d dev  //删除分支<br>(6)  git log –graph –pretty=oneline –abbrev-commit    //打印commit历史记录图<br>(7)  git merge –no-ff -m “merge with no-ff” dev     //禁止”Fast forward”</p>
</li>
</ol>
<ol>
<li>(1)  git stash       //储存工作区修改<br>(2)  git stash list  //打印工作现场列表<br>(3)  git satsh pop   //相当于(4) 和 (5)<br>(4)  git stash apply   //恢复不删除stash内容<br>(5)  git stash drop    //删除stash内容</li>
</ol>
<p>10.(1)  git branch -D feature-vulcan  //强制删除特征分支</p>
<p>11.(1)  git checkout -b dev origin/dev   //创建远程origin的dev分支到本地<br>   (2)  git push origin dev    //推送本地dev分支<br>   (3)  git branch –set -upstream dev origin/dev   //设置本地分支和远程分支的连接</p>
<p>12.(1)  git tag v1.0  //添加标签<br>   (2)  git tag    //打印所有标签<br>   (3)  git show tagname //查看标签信息<br>   (4)  git tag -a v0.1 -m “version 0.1 released” 3628164    //-a 指定标签名 -m 指定说明文字<br>   (5)  git show v0.1   //查看说明文字<br>   (6)  git tag -s v0.2 -m “signed version 0.2 released”  fec145a   //通过-s用私钥签名一个标签<br>   (7)  git tag -d v0.1    //删除标签<br>   (8)  git push origin v1.0  //推送某个标签到远程<br>   (9)  git push origin –tags   //推送多个标签<br>   (10) git tag -d v0.9<br>        git push origin :refs/tags/v0.9   //删除远程推送标签</p>
<p>13.(1)git last   //最后一次提交代码</p>
<p>“容易混”:<br>(1)  git reset HEAD readme.txt   //已修改，并且add过后 → 把暂存区的修改撤销掉，注意撤销了还会将修改放到工作区<br>(2)  git checkout – readme.txt  //已修改，但是还没有add → 丢弃工作区的修改<br>(3)  git reset –head  HEAD^     //返回之前的版本</p>
<p> “冲突有两种”<br> (1)  merge时冲突： 打开文件，直接修改两个分支的冲突，然后merge;<br> (2)  推送分支的时候冲突：先git pull(远程版本较本地新，这是冲突类型之一),pull merge报错(代码有冲突，这是冲突类型之二)，先按照上面的方法来解决merge冲突，然后推送;<br>  “stash” 是解决冲突的方法之一，还有最原始的方法就是查看冲突文件，手动改;<br>   如果修改文件和pull的文件是同一个文件时，要把自己改的代码都提交了,才能pull!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git安装相关]]></title>
      <url>http://yoursite.com/2016/05/26/Git%20%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3/</url>
      <content type="html"><![CDATA[<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol>
<li>修改C：/Windows/System32/drivers/etc/hosts，添加DNS的域名解析。   <br><a id="more"></a> 
</li>
</ol>
<p>第一次改的时候，可能没权限，具体百度下，就可以改了，修改后的hosts文件如下（这里的比较多，单独的git的域名可以只加最后一句）：</p>
<pre><code>`192.168.97.35 git.suncreate.com  `
</code></pre><ol>
<li><p>默认安装git,然后点击git Bash，并自报家门：</p>
<p> <code>git config --global user.name &quot;Your name&quot;</code><br> <code>git config --global user.email &quot;email@example.com&quot;</code></p>
</li>
</ol>
<p>3.生成你的email对应的密钥:<br>    <code>$ ssh-keygen -t rsa -C 396986654@qq.com</code>    <br><br>     然后一路回车，到c盘对应目录下找到这个文件：<code>id_rsa.pub</code>（公钥）  +  <code>id_rsa</code> （私钥）然后打开，并输入到自己的git设置中。这样就可以用邮箱下载和上传项目了。</p>
<h4 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h4><ul>
<li>通过github的验证之后，还会在.ssh目录中生成一个<code>known_hosts</code>的文件，用于检测用户。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搭建环境的一些细节]]></title>
      <url>http://yoursite.com/2016/05/26/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82/</url>
      <content type="html"><![CDATA[<h4 id="创建e-blog-和-e-arther1228两个文件夹的作用"><a href="#创建e-blog-和-e-arther1228两个文件夹的作用" class="headerlink" title="创建e:/blog 和 e:/arther1228两个文件夹的作用"></a>创建e:/blog 和 e:/arther1228两个文件夹的作用</h4><ul>
<li>e/blog是存储hexo的主目录,这个目录并直接与github关联，而只是通过_config.yml里面的repository来把生成的页面与github关联</li>
<li>e/arther1228 是用来存储hexo生成的页面的地址</li>
</ul>
<h4 id="config-yml修改细节"><a href="#config-yml修改细节" class="headerlink" title="_config.yml修改细节"></a>_config.yml修改细节</h4><ul>
<li>type: git中间要有一个空格才行 </li>
<li>repository 可能只支持https(待定)</li>
</ul>
<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="http://kaimingwan.com/post/others/hexo-blog-1" target="_blank" rel="external">hexo博客搭建完整教程2015（一）:环境准备</a></li>
<li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">开始使用Next主题</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[安装过程中的问题]]></title>
      <url>http://yoursite.com/2016/05/25/%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h2 id="代理未设置"><a href="#代理未设置" class="headerlink" title="代理未设置"></a>代理未设置</h2><p><code>chuang@### MINGW64 /e/blog</code><br><code>$ npm install -g hexo</code><br><code>npm ERR! Windows_NT 6.1.7601</code><br><code>npm ERR! argv &quot;C:\\Program Files\\nodejs\\node.exe&quot; &quot;C:\\Program Files\\nodejs\\</code><br><a id="more"></a>                                                                                                     <code>node_modules\\npm\\bin\\npm-cli.js&quot; &quot;install&quot; &quot;-g&quot; &quot;hexo&quot;</code><br><code>npm ERR! node v4.4.5</code><br><code>npm ERR! npm  v2.15.5</code><br><code>npm ERR! code ENOTFOUND</code><br><code>npm ERR! errno ENOTFOUND</code><br><code>npm ERR! syscall getaddrinfo</code></p>
<p><code>npm ERR! network getaddrinfo ENOTFOUND registry.npmjs.org</code> <code>registry.npmjs.org:443</code><br><code>npm ERR! network This is most likely not a problem with npm itself</code><br><code>npm ERR! network and is related to network connectivity.</code><br><code>npm ERR! network In most cases you are behind a proxy or have bad network settings.</code><br><code>npm ERR! network</code><br><code>npm ERR! network If you are behind a proxy, please make sure that the</code><br><code>npm ERR! network &#39;proxy&#39; config is set properly.  See: &#39;npm help config&#39;</code></p>
<p><code>npm ERR! Please include the following file with any support request:E:\blog\npm-debug.log</code></p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p><code>$ npm config set registry http://registry.npmjs.org/</code></p>
<h2 id="在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错"><a href="#在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错" class="headerlink" title="在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错:"></a>在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错:</h2><p><code>fatal: unable to access &#39;https://github.com/hexojs/hexo-starter.git&#39;: Protocol https not supported or disabled in libcurl</code></p>
<h3 id="解决办法-暂时"><a href="#解决办法-暂时" class="headerlink" title="解决办法(暂时)"></a>解决办法(暂时)</h3><p>将libcurl.dll 添加一个后缀名<br><code>C:\Windows\SysWOW64\libcurl.dll.old</code></p>
]]></content>
    </entry>
    
  
  
</search>
