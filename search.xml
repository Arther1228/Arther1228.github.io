<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[书单]]></title>
      <url>http://yoursite.com/2016/06/15/%E4%B9%A6%E5%8D%95/</url>
      <content type="html"><![CDATA[<h4 id="书单汇总"><a href="#书单汇总" class="headerlink" title="书单汇总"></a>书单汇总</h4><h5 id="已读"><a href="#已读" class="headerlink" title="============已读============"></a>============已读============</h5><ol>
<li>《疯狂Ajax讲义》</li>
<li>《JavaScript 高级程序设计》</li>
<li>《Ibatis实战》</li>
</ol>
<a id="more"></a> 
<h5 id="正在读"><a href="#正在读" class="headerlink" title="===========正在读==========="></a>===========正在读===========</h5><ol>
<li>《Java编程思想》</li>
<li>《Maven实战》 </li>
</ol>
<h5 id="未读"><a href="#未读" class="headerlink" title="============未读============"></a>============未读============</h5><ol>
<li>《程序员的自我修养》</li>
<li>《从小工到专家》</li>
<li>《深入分析Java Web》</li>
<li>《Servlet与JSP核心编程》</li>
<li>《深入理解计算机系统》</li>
<li>《计算机组成原理》</li>
<li>《深入分析Java Web技术内幕》  </li>
<li>《图解HTTP》</li>
<li>《图解TCP/IP（第5版）》</li>
<li>《图解网络硬件》</li>
<li>《Java Web高级编程》</li>
<li>《Python网络数据采集》</li>
<li>《Spring3.x企业应用开发实战》</li>
<li>《跟我学SpringMVC》</li>
<li>《Tomcat权威指南》</li>
<li>《24种设计模式介绍与6大设计原则》 </li>
<li>《大话设计模式》</li>
<li>《[编写高质量代码：改善Java程序的151个建议].秦小波.扫描版》</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tomcat错误合集]]></title>
      <url>http://yoursite.com/2016/06/15/Tomcat%E9%94%99%E8%AF%AF%E5%90%88%E9%9B%86/</url>
      <content type="html"><![CDATA[<h4 id="错误1"><a href="#错误1" class="headerlink" title="错误1"></a>错误1</h4><ol>
<li>说信息: validateJarFile(D:/xj/workspace/webworktest/webapp/WEB-INF/lib/servlet-api-2.4.jar) - jar not loaded. See Servlet Spec 2.3, section 9.7.2. Offending class: javax/servlet/Servlet.class</li>
</ol>
<a id="more"></a> 
<ul>
<li>分析：<br>jsp-api.jar和servlet-api.jar这两个包在common\lib已经有了，必须将\WEB-INF\lib\目录下的去掉，否则会冲突的，会引起jboss启动正常，而页面却总是无内容显示的错误</li>
<li>解决方案：<blockquote>
<p>将\WEB-INF\lib\目录下的jsp-api.jar和servlet-api.jar删除<br>保证WEB-INF\lib跟tomcat5的common/lib下的JAR包没有重复的</p>
</blockquote>
</li>
</ul>
<h4 id="错误2"><a href="#错误2" class="headerlink" title="错误2"></a>错误2</h4><p>1.警告: [SetPropertiesRule]{Server/Service/Engine/Host/Context} Setting property ‘source’ to ‘org.eclipse.jst.jee.server:aa’ did not find a matching property</p>
<ul>
<li><p>分析：<br>这是因为我们在eclipse下，通过tomcat部署web工程时，tomcat的配置文件server.xml中会自动生成一个关于该web工程的配置信息，类似于下面的东西：</p>
</li>
<li><p>Xml代码：<br>路径：D:\pahf\Servers\Tomcat v7.0 Server at pahfpt-config\server.xml</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context docBase=&quot;pahfpt&quot; path=&quot;/pahfpt&quot; reloadable=&quot;true&quot; source=&quot;org.eclipse.jst.jee.server:pahfpt&quot;/&gt;</span><br></pre></td></tr></table></figure>
<p>而默认情况下，server.xml的 Context元素不支持名称为source的属性，所以会发出警告。</p>
<ul>
<li>解决方案：<br>关闭tomcat，双击eclipse下tomcat服务器，在出来的Tomcat server at localhost页面中找到server options选项，选中其中的选项”Publish modual contexts to separat XML files“，ctr+s，启动tomcat。</li>
</ul>
<h4 id="错误3"><a href="#错误3" class="headerlink" title="错误3"></a>错误3</h4><ol>
<li>Server Tomcat v7.0 Server at pahfpt was unable to start within 45 seconds. If the server requires more time, try increasing the timeout in the server editor.</li>
</ol>
<ul>
<li><p>错误提示就是我们限定了部署的时间导致的错误。<br>*解决办法：</p>
<p>修改 workspace.metadata.plugins\org.eclipse.wst.server.core\servers.xml文件。<br>把其中的start-timeout=”45” 改为  start-timeout=”100” 或者更长，根据不同同学的工程大小来设置。<br>最后重启eclipse就可以了。 </p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CAS部署问题合集]]></title>
      <url>http://yoursite.com/2016/06/14/CAS%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98%E5%90%88%E9%9B%86/</url>
      <content type="html"><![CDATA[<h4 id="一、客户端导入证书错误"><a href="#一、客户端导入证书错误" class="headerlink" title="一、客户端导入证书错误"></a>一、客户端导入证书错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator&gt;keytool -import -file C:\Program Files (</span><br><span class="line">x86)\Java\jdk1.7.0_45\jre\lib\security\cacerts -file E:\sso\ssodemo.crt -alias s</span><br><span class="line">sodemo</span><br><span class="line">非法选项:  Files</span><br><span class="line">keytool -importcert [OPTION]...</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">导入证书或证书链</span><br><span class="line"></span><br><span class="line">选项:</span><br><span class="line"></span><br><span class="line"> -noprompt                       不提示</span><br><span class="line"> -trustcacerts                   信任来自 cacerts 的证书</span><br><span class="line"> -protected                      通过受保护的机制的口令</span><br><span class="line"> -alias &lt;alias&gt;                  要处理的条目的别名</span><br><span class="line"> -file &lt;filename&gt;                输入文件名</span><br><span class="line"> -keypass &lt;arg&gt;                  密钥口令</span><br><span class="line"> -keystore &lt;keystore&gt;            密钥库名称</span><br><span class="line"> -storepass &lt;arg&gt;                密钥库口令</span><br><span class="line"> -storetype &lt;storetype&gt;          密钥库类型</span><br><span class="line"> -providername &lt;providername&gt;    提供方名称</span><br><span class="line"> -providerclass &lt;providerclass&gt;  提供方类名</span><br><span class="line"> -providerarg &lt;arg&gt;              提供方参数</span><br><span class="line"> -providerpath &lt;pathlist&gt;        提供方类路径</span><br><span class="line"> -v                              详细输出</span><br><span class="line"></span><br><span class="line">使用 &quot;keytool -help&quot; 获取所有可用命令</span><br></pre></td></tr></table></figure>
<p>这个错误的来源是jre安装在c盘Program Files里面造成的：</p>
<blockquote>
<p>C:\Program Files (x86)\Java\jdk1.7.0_45\jre\lib\security\cacerts</p>
</blockquote>
<p>由于只是要用cacerts这个工具，可以把这个工具拷贝到e:\123\cacerts下面来执行客户端导入证书操作：</p>
<blockquote>
<p>keytool -import -file E:\12\cacerts -file E:\sso\ssodemo.crt -alias ssodemo</p>
</blockquote>
<ul>
<li>结果：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator&gt;keytool -import -file E:\12\cacerts -fil</span><br><span class="line">e E:\sso\ssodemo.crt -alias ssodemo</span><br><span class="line">输入密钥库口令:</span><br><span class="line">再次输入新口令:</span><br><span class="line">所有者: CN=demo.micmiu.co, OU=micmiu.com, O=micmiu, L=SH, ST=SH, C=CN</span><br><span class="line">发布者: CN=demo.micmiu.co, OU=micmiu.com, O=micmiu, L=SH, ST=SH, C=CN</span><br><span class="line">序列号: 7cf7329d</span><br><span class="line">有效期开始日期: Tue Jun 14 18:04:07 CST 2016, 截止日期: Wed Jun 14 18:04:07 CST</span><br><span class="line">2017</span><br><span class="line">证书指纹:</span><br><span class="line">         MD5: 36:0B:D4:86:3E:6B:9B:F6:20:A5:F9:B6:6E:5E:88:89</span><br><span class="line">         SHA1: F0:DC:38:9C:D4:7F:7B:15:50:6C:AF:34:BE:42:3B:26:C7:06:A1:58</span><br><span class="line">         SHA256: 76:9A:49:67:1D:DB:43:6F:BE:88:D7:E7:B4:5F:42:6F:A9:89:80:14:EA:</span><br><span class="line">F8:AE:40:96:A0:B3:D7:65:00:19:7F</span><br><span class="line">         签名算法名称: SHA256withRSA</span><br><span class="line">         版本: 3</span><br><span class="line"></span><br><span class="line">扩展:</span><br><span class="line"></span><br><span class="line">#1: ObjectId: 2.5.29.14 Criticality=false</span><br><span class="line">SubjectKeyIdentifier [</span><br><span class="line">KeyIdentifier [</span><br><span class="line">0000: B3 92 49 BB 71 3C 9F E5   28 D7 73 0E 89 7B 8F DB  ..I.q&lt;..(.s.....</span><br><span class="line">0010: E6 A3 5E DC                                        ..^.</span><br><span class="line">]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">是否信任此证书? [否]:  y</span><br><span class="line">证书已添加到密钥库中</span><br></pre></td></tr></table></figure>
<h4 id="二、启动tomcat错误"><a href="#二、启动tomcat错误" class="headerlink" title="二、启动tomcat错误"></a>二、启动tomcat错误</h4><p>原始配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8443&quot; protocol=&quot;HTTP/1.1&quot; SSLEnabled=&quot;true&quot;</span><br><span class="line">    maxThreads=&quot;150&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br><span class="line"> keystoreFile=&quot;e:/sso/ssodemo.keystore&quot; keystorePass=&quot;michaelpwd&quot;</span><br><span class="line">    clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; URIEncoding=&quot;UTF-8&quot; /&gt;</span><br></pre></td></tr></table></figure></p>
<p>报错如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">java.lang.Exception: Connector attribute SSLCertificateFile must be defined when</span><br><span class="line"> using SSL with APR</span><br><span class="line">        at org.apache.tomcat.util.net.AprEndpoint.bind(AprEndpoint.java:469)</span><br><span class="line">        at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.jav</span><br><span class="line">a:482)</span><br><span class="line">        at org.apache.coyote.AbstractProtocolHandler.init(AbstractProtocolHandle</span><br><span class="line">r.java:355)</span><br><span class="line">        at org.apache.catalina.connector.Connector.initInternal(Connector.java:9</span><br><span class="line">10)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:101)</span><br><span class="line">        at org.apache.catalina.core.StandardService.initInternal(StandardService</span><br><span class="line">.java:559)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:101)</span><br><span class="line">        at org.apache.catalina.core.StandardServer.initInternal(StandardServer.j</span><br><span class="line">ava:781)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:101)</span><br><span class="line">        at org.apache.catalina.startup.Catalina.load(Catalina.java:572)</span><br><span class="line">        at org.apache.catalina.startup.Catalina.load(Catalina.java:595)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.</span><br><span class="line">java:57)</span><br><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces</span><br><span class="line">sorImpl.java:43)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Method.java:606)</span><br><span class="line">        at org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:262)</span><br><span class="line">        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:430)</span><br><span class="line"></span><br><span class="line">六月 14, 2016 6:43:44 下午 org.apache.catalina.core.StandardService initInternal</span><br><span class="line"></span><br><span class="line">严重: Failed to initialize connector [Connector[HTTP/1.1-8443]]</span><br><span class="line">org.apache.catalina.LifecycleException: Protocol handler initialization failed</span><br><span class="line">        at org.apache.catalina.connector.Connector.initInternal(Connector.java:9</span><br><span class="line">12)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:101)</span><br><span class="line">        at org.apache.catalina.core.StandardService.initInternal(StandardService</span><br><span class="line">.java:559)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:101)</span><br><span class="line">        at org.apache.catalina.core.StandardServer.initInternal(StandardServer.j</span><br><span class="line">ava:781)</span><br><span class="line">        at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:101)</span><br><span class="line">        at org.apache.catalina.startup.Catalina.load(Catalina.java:572)</span><br><span class="line">        at org.apache.catalina.startup.Catalina.load(Catalina.java:595)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.</span><br><span class="line">java:57)</span><br><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces</span><br><span class="line">sorImpl.java:43)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Method.java:606)</span><br><span class="line">        at org.apache.catalina.startup.Bootstrap.load(Bootstrap.java:262)</span><br><span class="line">        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:430)</span><br><span class="line">Caused by: java.lang.Exception: Connector attribute SSLCertificateFile must be d</span><br><span class="line">efined when using SSL with APR</span><br><span class="line">        at org.apache.tomcat.util.net.AprEndpoint.bind(AprEndpoint.java:469)</span><br><span class="line">        at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.jav</span><br><span class="line">a:482)</span><br><span class="line">        at org.apache.coyote.AbstractProtocolHandler.init(AbstractProtocolHandle</span><br><span class="line">r.java:355)</span><br><span class="line">        at org.apache.catalina.connector.Connector.initInternal(Connector.java:9</span><br><span class="line">10)</span><br><span class="line">        ... 13 more</span><br></pre></td></tr></table></figure></p>
<ul>
<li>原因：</li>
</ul>
<p>Tomcat提供了两个SSL实现，一个是JSSE实现，另一个是APR实现。Tomcat将自动选择使用哪个实现，即如果安装了APR则自动选择APR，否则选择JSSE。如果不希望让Tomcat自动选择，而是我们自己指定一个实现则可通过protocol定义，如下：</p>
<p>APR文件名为tcnative-1.dll。6.0里没这个dll文件，而7.0里有。换句话说，6.0默认使用JSSE实现，而7.0默认使用APR实现。弄明白缘由就好办了。由于习惯使用6.0的配置方式（即JSEE实现），因此只要把conf\server.xml里的protocol修改一下就行了：    </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11Protocol&quot; SSLEnabled=&quot;true&quot;</span><br><span class="line">            maxThreads=&quot;150&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</span><br><span class="line">   keystoreFile=&quot;e:/sso/ssodemo.keystore&quot; keystorePass=&quot;michaelpwd&quot;</span><br><span class="line">            clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; URIEncoding=&quot;UTF-8&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>然后启动就不会报错了。</p>
<p><a href="http://blog.sina.com.cn/s/blog_5d2054d90102vkxa.html" target="_blank" rel="external">Tomcat报错“connector attribute SSLCertificateFile must be defined…</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git 常见错误]]></title>
      <url>http://yoursite.com/2016/06/08/git-%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[罗永浩《我的奋斗》]]></title>
      <url>http://yoursite.com/2016/06/07/%E7%BD%97%E6%B0%B8%E6%B5%A9%E3%80%8A%E6%88%91%E7%9A%84%E5%A5%8B%E6%96%97%E3%80%8B/</url>
      <content type="html"><![CDATA[<h4 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h4><ol>
<li>后来。。。后来我想到生活的一个令人不安的真相：在这个世界上，坏人好像总是更勤奋一点。</li>
<li>另外，我还做了一个准备就是，我和所有人一样，都是懒惰的、容易放弃的、坚持不下去的、没有毅力的。这个你也不用感到自卑，因为我们从基因上就是被设计成这样的。我们生来就是懒惰的。这本来是一个金花的需要，你不用为此感到难过，我们都是受这个控制的。<a id="more"></a> </li>
<li>如果我们想获得持续的人生进步，保持这种美好的、亢奋的状态，最好就是每三天听一场热血沸腾的人生励志讲座。</li>
<li>我平时是不看这些书的，但你要明白一点就是，当你定下一个艰巨的、阶段性的计划的时候，有这么几本书放在床边，绝对是最好的精神鸦片。你不要迷信那些成功学大师，都是江湖骗子。你备着那么几本书的好处就是，你什么时候坚持不下去了，随手拿起来一翻，就像精神鸦片给你打一针，又能坚持三天。</li>
<li>成年后的观察和思考使我觉得转校好像对小孩很容易造成伤害，我见过很多类似的例子。</li>
<li>后来发现亦舒有一个中篇小说《我这样爱她》，讲述一个中学男生暗恋女教师的故事，我胸口酸疼地看到这个跟我一样苦命的孩子说：“每一年至少有两千多个男生爱上了女教师，虽然我尽力与自己说我没有那两千个庸俗，但是，心里还是知道好不了多少。。。”</li>
<li><blockquote>
<p>&nbsp; &nbsp; 独立思考意识的形成，有很大的偶然性，这是一个很奇怪也很好玩的事情。我的母亲作为一个思想控制年代里被洗脑的受害者，几乎在任何时候都会坚定地和执政者站在一起，但即使是这样，也会出现意外：九十年代初美帝国主义总拿贸易最惠国待遇跟中国政府说事儿的时候，有一阵子新闻联播天天谴责美帝的同时，还反复播放一小撮在美华人到白宫门口为此抗议的消息，母亲连着看了几天，最后有点迟疑地跟我说，这美国佬怎么会允许一帮外国佬天天到他们政府门口这么闹腾啊？看来这美国的自由不像是骗人的啊？我为了这个奇迹又惊又喜，跳起来说，妈，你终于开窍了？新闻联播就应该是这样看的啊。<br>在我接触到那些真正意义上的启蒙读物之前，单是因为忠于自己的感受，或是基于一些常识，就已经能感觉到这个世界是荒谬和愚蠢的了，比如从初中时开始我就不停地听到这么一个主流的世界观：“你不抽烟？不喝酒？你还是不是男人？”（它的最常见的变体是“烟酒都不沾，那你还算什么爷儿们？”）那时候我总是想，如果能让他们停止说这些蠢话，我愿意成为他们指定的任意性别。到了快成年的时候，我终于学会让这些话一个耳朵进一个耳朵出了，但为了不伤害感情，大部分的时候我都会努力控制面部表情 “茄子”。到我二十多岁离开家乡为止，传统陋习中的强行劝酒一直都是我跟朋友交往时的一个噩梦，我始终都很讨厌喝酒。那时候我的酒量还不错，这样的好处是被迫应付一些场合的时候不至于扛不住，坏处是在有熟人的场合很难以“我这个人一点儿酒也喝不了”为由躲掉，这和那些喝一点就满脸通红，再喝一点就要胃出血的人的情况刚好相反，但你很难说哪一种特质的结果更糟糕。我的同学里，有些是酒精过敏的体质，在这个对他们来讲很难说是不险恶的环境中生存，都有过那么几次被损友灌酒再被送进医院的悲惨经历，但我三十多岁后回去跟他们吃饭，发现他们终于练出了一点点酒量后，也开始满嘴酒气、满脸通红地逼那些不爱喝酒的人：“不行！小张这杯你必须喝”。浑浑噩噩的人来到世间，总是跳不出这个圈子：先是傻头傻脑地成为受害者，然后再愣头愣脑地成为施害者。</p>
<p>&nbsp; &nbsp; 民族问题上的精神折磨是导致我养成思考习惯的另一个主要原因，我长大的时候，虽然没有像这个世界的很多灾难土地上的人们那样经历民族仇恨，但还是能从很多方面感觉到一定程度的民族隔阂，比如在学校里朝鲜族的小流氓和汉族的小流氓都或多或少倾向于欺负非本民族的同学，两族的口语里都保留了很多对对方带有歧视性的用词，异族情侣交往时通常要承受更多的家庭压力等等。整天看着这些怪现象胡思乱想寻找答案的同时，我还不得不抽空应付那些无聊的长辈提出的无聊问题：“你不认识朝文字？你是个朝鲜族怎么可以不识朝文呢？”“这场比赛你希望朝鲜队赢还是中国队赢？”“如果以后朝鲜和中国打起来，你会支持哪一方？”现在回头再看这些曾经给我的青春期造成过困扰的问题，我很庆幸它们给了我思想训练的最初动力。其实，对于没有独立判断能力的人来说，情况并不会因为不是发生在异族之间而有任何区别：一个没头脑的中国人，生在大陆，就痛恨国民党，生在台湾，就痛恨共产党，在思想上，他们从来都不是自己，他们永远是别人。<br>&nbsp; &nbsp; 如果生在一个落后国家的偏僻角落里，长大的时候基本上可以肯定没有人能在思想上给你很大的帮助，很多时候，不要说帮助，就连多少能够互相理解和沟通的人都很难遇到。除了性和暴力，我在青春期最主要的烦恼就是几乎找不到能畅快交流的人，总感觉身边的人好像不是笨蛋就是坏蛋（好在我自己在很多方面也非常笨，所以也经常被他们嘲笑，总算大家都能心平气和）。这样想来，辍学后我把大部分时间都用来读书寻找答案和慰藉也在很大程度上是一个必然的结果了。由于缺乏明确的计划和指导，我在辍学后读书最集中的那几年，大部分时间都用在了文学书籍上，现在回想起来还是有点儿遗憾的。在最初的思想启蒙方面，对我帮助最大的，是大陆零星出版的那些李敖的文集，在九十年代末逐渐看清李敖的真实嘴脸之前，他一直都是我心中最酷的偶像。<br>&nbsp; &nbsp; 胡乱读了几百本书之后，我渐渐意识到我可能不需要学校的所谓“教育”了。幸运的是，稍后我让父母也有了类似的感觉（虽然他们始终都不是很有把握）。在我十八周岁前的那个冬天，我终于彻底离开了学校。按照那时候家乡人的习惯说法，我的这种退学行为是“不读书了”，尽管还在“读书”的同学们读的都是名著节选，我读的都是名著全本。每次我尝试指出日常生活的荒谬本质时，都会被那些习惯了荒谬的笨蛋们说成是“偏激”，后来我就变得越来越没有耐心了，可想而知，他们因此变得更加有信心了，“你看，你多偏激啊”。<br>&nbsp; &nbsp; 那时候我最喜欢的中国小说家是余华(微博)和王朔。王朔最红的时候，我误以为我们这一代青年的一些特征，比如满嘴不真诚或不怀好意的真诚、羞于表达内心、假装浑身上下哪儿都不柔软、讽刺挖苦一切据信是庄严或美好的东西并以此为酷等等，都是受了他的影响才形成的，后来看了胡平的“犬儒病”才慢慢想明白,王朔只是满足了那个时代的心理需求，并没有带来或改变什么。在一个犬儒主义观念盛行的时代，以明显的犬儒主义风格满足了大众心理需求的作家王朔，骨子里并不是一个犬儒主义者，他是一个非常善良和真诚的人，这是一个令人备感温暖的荒诞事实。二零零七年，王朔接受访谈时说，“我前些年一直扮演一个北京流氓王朔，其实我不是，我是一个有美德的人，我内心真的很美，我没有害过人，没有对不起人，我没有欺负过比我弱小的人。”我看到报道时非常感动，用混不吝的、玩世不恭的语气调侃了半辈子之后，他终于还是自己说出来了。胡平在“犬儒病”的题记中说，“人心不会熄灭，但它可能蒙上灰烬而不再燃烧。灰烬本来是燃烧的产物，但它反过来又抑制了燃烧。拨开灰烬，你会看到重新燃烧的人心。”<br>&nbsp; &nbsp; 虽然我也不可避免地彷徨和脆弱过，但我不记得我这辈子有过“熄灭”或是“蒙上灰烬”的时候。在我长大后看到很多反映类似“残酷青春”这样的主题的文艺作品之前，我还以为我的青少年时期过得还算顺利。我后来发现我经历过的很多真实事件，比如小时候被几个人渣般的老师轮流摧残，比如在中学的很长的一段时间里被一群学校附近的流氓无端羞辱和殴打，比如我离开校园之后跟一个女孩子热恋但她一直对我隐瞒着她的妓女身份等等，这些对年轻人来说显然是非常残酷的经历放到这些作品主人公的生命里，都会成为一个足以使他们杀人放火，或是彻底颓掉成为一个虚无主义者的充分条件。这些事情放在真实的生活里，对很多人好像也确实会产生类似的结局。但是在我身上，这些遭遇好像只能让我扎扎实实地难过一段时间就过去了，甚至没有留下什么像样的阴影。作为一个心理素质奇差、随便有点什么事情都会瞬间就紧张出一身冷汗的笨蛋，我又渐渐发现自己其实是一个内心强大、择善固执的人。我不能确定这里面有多大的运气成分，想来一定是有的；我能确定的是，我为了一个我希望坚持的东西做过很多努力和心理调节。我做了教师以后，有些和我一样生长在小地方的学生来信说，他们在身边找不到能沟通交流的朋友，感到很孤独。而且到处都是善意地摧残他们的长辈，整天打击他们拒绝同流合污的信念，搞得他们开始有点怀疑自己的坚持和这种坚持的价值了，问我如何保持饱满的情绪和旺盛的斗志。孤独的问题，我想限于条件，只能用读书的方式来解决。至于肯定自己的坚持和价值，我长大的时候，自我调节的方式和过程大概是这样的：我不断听到那些在人品和能力上都让我由衷鄙视的长辈们对我说，你不要生气，中国的事儿就是这样，你生气也改变不了的，其实你到哪儿都一样，一定要学会适应环境，你不要太较真儿了，差不多就行了，你这样的态度到哪儿都吃不开……这种话听得多了，我就慢慢明白了，哦，原来我是一个正直的，对是非善恶感受强烈的，有理想，有追求，有原则的热血青年。过了些年，这些长辈们再次见到我的时候又惊讶地说，咦？你怎么还是这德行？一点都没变？你这样怎么还没被人搞死？听说你小子混得还挺好？劝你还是小心点吧，你这么臭得瑟没什么好下场……这种话听得多了，我又渐渐明白了：哦，原来我是一个正直的，对是非善恶感受强烈的，有理想，有追求，有原则，有坚持的热血青年，并且还是个聪明的，有勇有谋的热血青年……<br>&nbsp; &nbsp; 在这个应出版公司邀请写给年轻人看的成长故事的最后，我把凯鲁亚克小说里的一句话，也是我非常喜欢的一句话抄录在这里：<br>&nbsp; &nbsp;      “永远年轻，永远热泪盈眶”<br>当你试图放弃一个你知道是正确的事情的时候，希望你能再看看这句话。</p>
</blockquote>
</li>
</ol>
<h4 id="老罗语录"><a href="#老罗语录" class="headerlink" title="老罗语录"></a>老罗语录</h4><ol>
<li><p>什么叫你所说的独立思考？怎么去训练？   </p>
<blockquote>
<p> 简单地说，大家大义凛然地批判笑贫不笑娼的社会风气的时候，有人说，“为什么妓女就该被笑呢？妓女比穷人差在哪里？”这就是独立思考。怎么训练？多看思想类的书籍，多思考。</p>
</blockquote>
</li>
<li><p>你为什么不喜欢“老罗语录”之称？</p>
<blockquote>
<p>我再课上总是启发学生独立思考，但是他们把我的言论当成“语录”。我总感觉一个人把别人的话当成语录的时候，通常是放弃自己的思考了。</p>
</blockquote>
</li>
<li><p>如果请你到一所普通的高中去开一门选修课，科目随你选，你会去吗，你会教给我们什么呢？如果你是教育者，你最希望青年掌握的是什么？我们如何知道自己是否有独立思考的能力？</p>
<ul>
<li>会去。</li>
<li>由着我的性子教中文，因为我英文其实很烂，还是哑巴英语。</li>
<li>希望他们学会思考，这比知识重要得多。</li>
<li>一时没想到特别有效的方法，简单的方法是读读《人民日报》，听听《新闻联播》，再看看孔庆东的博客。如果觉得基本上句句都不像人话，那就差不多就有独立思考的能力了。</li>
</ul>
</li>
</ol>
<h4 id="一些书"><a href="#一些书" class="headerlink" title="一些书"></a>一些书</h4><ol>
<li>《罗马帝国衰亡史》</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eclipse快捷键]]></title>
      <url>http://yoursite.com/2016/06/06/Eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      <content type="html"><![CDATA[<h3 id="Eclipse-常用快捷键"><a href="#Eclipse-常用快捷键" class="headerlink" title="Eclipse 常用快捷键"></a>Eclipse 常用快捷键</h3><h4 id="一、编辑"><a href="#一、编辑" class="headerlink" title="一、编辑"></a>一、编辑</h4><a id="more"></a> 
<table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+1</td>
<td>快速修复（最经典的快捷键,就不用多说了，可以解决很多问题，比如import类、try catch包围等）</td>
</tr>
<tr>
<td>Ctrl+Shift+F</td>
<td>格式化当前代码</td>
</tr>
<tr>
<td>Ctrl+Shift+M</td>
<td>添加类的import导入</td>
</tr>
<tr>
<td>Ctrl+Shift+O</td>
<td>组织类的import导入（既有Ctrl+Shift+M的作用，又可以帮你去除没用的导入，很有用）</td>
</tr>
<tr>
<td>Ctrl+Y</td>
<td>重做（与撤销Ctrl+Z相反）</td>
</tr>
<tr>
<td>Alt+/</td>
<td>内容辅助（帮你省了多少次键盘敲打，太常用了）</td>
</tr>
<tr>
<td>Ctrl+D</td>
<td>删除当前行或者多行</td>
</tr>
<tr>
<td>Alt+↓</td>
<td>当前行和下面一行交互位置（特别实用,可以省去先剪切,再粘贴了）</td>
</tr>
<tr>
<td>Alt+↑</td>
<td>当前行和上面一行交互位置（同上）</td>
</tr>
<tr>
<td>Ctrl+Alt+↓</td>
<td>复制当前行到下一行（复制增加）</td>
</tr>
<tr>
<td>Ctrl+Alt+↑</td>
<td>复制当前行到上一行（复制增加）</td>
</tr>
<tr>
<td>Shift+Enter</td>
<td>在当前行的下一行插入空行（这时鼠标可以在当前行的任一位置,不一定是最后）</td>
</tr>
<tr>
<td>Ctrl+/</td>
<td>注释当前行,再按则取消注释</td>
</tr>
</tbody>
</table>
<h4 id="二、导航"><a href="#二、导航" class="headerlink" title="二、导航"></a>二、导航</h4><table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+Shift+T</td>
<td>搜索类（包括工程和关联的第三jar包）</td>
</tr>
<tr>
<td>Ctrl+Shift+R</td>
<td>搜索工程中的文件</td>
</tr>
<tr>
<td>Ctrl+E</td>
<td>快速显示当前Editer的下拉列表（如果当前页面没有显示的用黑体表示）</td>
</tr>
<tr>
<td>F4</td>
<td>打开类型层次结构</td>
</tr>
<tr>
<td>F3</td>
<td>跳转到声明处</td>
</tr>
<tr>
<td>Alt+←</td>
<td>前一个编辑的页面</td>
</tr>
<tr>
<td>Alt+→</td>
<td>下一个编辑的页面（当然是针对上面那条来说了）</td>
</tr>
<tr>
<td>Ctrl+PageUp/PageDown</td>
<td>在编辑器中，切换已经打开的文件</td>
</tr>
</tbody>
</table>
<h4 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a>三、其他</h4><table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>Alt+Enter</td>
<td>显示当前选择资源的属性，windows下的查看文件的属性就是这个快捷键，通常用来查看文件在windows中的实际路径</td>
</tr>
<tr>
<td>Ctrl+↑</td>
<td>文本编辑器 上滚行</td>
</tr>
<tr>
<td>Ctrl+↓</td>
<td>文本编辑器 下滚行</td>
</tr>
<tr>
<td>Ctrl+M</td>
<td>最大化当前的Edit或View （再按则反之）</td>
</tr>
<tr>
<td>Ctrl+O</td>
<td>快速显示 OutLine（不开Outline窗口的同学，这个快捷键是必不可少的）</td>
</tr>
<tr>
<td>Ctrl+T</td>
<td>快速显示当前类的继承结构</td>
</tr>
<tr>
<td>Ctrl+W</td>
<td>关闭当前Editer（windows下关闭打开的对话框也是这个，还有qq、旺旺、浏览器等都是）</td>
</tr>
<tr>
<td>Ctrl+L</td>
<td>文本编辑器 转至行</td>
</tr>
</tbody>
</table>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><a href="http://www.runoob.com/eclipse/eclipse-shortcuts.html" target="_blank" rel="external">Eclipse 快捷键</a></li>
<li><a href="http://blog.csdn.net/abbuggy/article/details/7016185" target="_blank" rel="external">eclipse中格式化代码快捷键Ctrl+Shift+F失效的解决办法</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript 调试技巧]]></title>
      <url>http://yoursite.com/2016/06/02/JavaScript-%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<h4 id="常见操作"><a href="#常见操作" class="headerlink" title="常见操作"></a>常见操作</h4><ol>
<li><p>debugger;</p>
<p>我以前也说过，你可以在JavaScript代码中加入一句debugger;来手工造成一个断点效果。<br>需要带有条件的断点吗？你只需要用if语句包围它：</p>
</li>
</ol>
<a id="more"></a> 
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (somethingHappens) &#123;</span><br><span class="line">	debugger;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但要记住在程序发布前删掉它们。</p>
<p>2.设置在DOM node发生变化时触发断点</p>
<p>有时候你会发现DOM不受你的控制，自己会发生一些奇怪的变化，让你很难找出问题的根源。</p>
<p>谷歌浏览器的开发工具里有一个超级好用的功能，专门可以对付这种情况，叫做“Break on…”，你在DOM节点上右键，就能看到这个菜单项。</p>
<p>断点的触发条件可以设置成这个节点被删除、节点的属性有任何变化，或它的某个子节点有变化发生。</p>
<p><img src="pitcures/e59002ebcd7e6b7b803ac9735291a57a.jpg" alt=""></p>
<p><a href="http://blog.jobbole.com/61737/" target="_blank" rel="external">JavaScript程序员必备的5个debug技巧</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tomcat基础]]></title>
      <url>http://yoursite.com/2016/06/01/Tomcat%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h3 id="一、清理"><a href="#一、清理" class="headerlink" title="一、清理"></a>一、清理</h3><ol>
<li>直接删除work下面的Catalina文件夹;</li>
<li>也可以删除Tomcat根目录下面的webapps文件夹下面的非当前应用，因为如果不更改tomcat发布位置的话，是默认发布到这个文件下面的。</li>
</ol>
<a id="more"></a> 
<h3 id="二、常见设置"><a href="#二、常见设置" class="headerlink" title="二、常见设置"></a>二、常见设置</h3><p>1.将应用发布到指定位置:</p>
<blockquote>
<p><code>Server Location</code>  → <code>Use Tomcat installation</code>  →  <code>Server path</code> 设置到具体位置</p>
</blockquote>
<h3 id="三、扩展阅读"><a href="#三、扩展阅读" class="headerlink" title="三、扩展阅读"></a>三、扩展阅读</h3><ul>
<li><a href="http://www.cnblogs.com/xdp-gacl/p/3734395.html" target="_blank" rel="external">JavaWeb学习总结(二)——Tomcat服务器学习和使用(一)</a></li>
<li><a href="http://www.cnblogs.com/xdp-gacl/p/3744053.html" target="_blank" rel="external">JavaWeb学习总结(三)——Tomcat服务器学习和使用(二)</a></li>
<li><a href="http://www.cnblogs.com/maypattis/p/5549613.html" target="_blank" rel="external">理解tomcat之搭建简易http服务器</a></li>
<li><a href="http://item.jd.com/10100538.html" target="_blank" rel="external">Tomcat权威指南（第2版）</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[javascript之QUnit单元测试]]></title>
      <url>http://yoursite.com/2016/05/31/javascript%E4%B9%8BQUnit%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript中undefined 、 null 和 NaN的区别]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E4%B8%ADundefined-%E5%92%8C-null%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<h4 id="一、区别"><a href="#一、区别" class="headerlink" title="一、区别"></a>一、区别</h4><p>   Undefined类型只有一个值，即undefined。当声明的变量还未被初始化时，变量的默认值为undefined。<br>Null类型也只有一个值，即null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</p>
<ul>
<li>js 代码<br><pre><code><br>var oValue;<br>alert(oValue == undefined); //output “true”<br></code></pre><br>这段代码显示为true,代表oVlaue的值即为undefined，因为我们没有初始化它。  </li>
</ul>
<a id="more"></a> 
<ul>
<li><p>js 代码</p>
<p><code>alert(null == document.getElementById(&#39;notExistElement&#39;));</code> </p>
<p>当页面上不存在id为”notExistElement”的DOM节点时，这段代码显示为”true”，因为我们尝试获取一个不存在的对象。</p>
</li>
<li><p>js 代码</p>
<pre><code>    
alert(typeof undefined); //output "undefined"  
alert(typeof null); //output "object"  
</code></pre>

</li>
</ul>
<p>第一行代码很容易理解，undefined的类型为Undefined；第二行代码却让人疑惑，为什么null的类型又是Object了呢？其实这是JavaScript最初实现的一个错误，后来被ECMAScript沿用下来。在今天我们可以解释为，null即是一个不存在的对象的占位符，但是在实际编码时还是要注意这一特性。</p>
<ul>
<li><p>js 代码</p>
<p><code>alert(null == undefined); //output &quot;true&quot;</code></p>
</li>
</ul>
<p>ECMAScript认为undefined是从null派生出来的，所以把它们定义为相等的。但是，如果在一些情况下，我们一定要区分这两个值，那应该怎么办呢？可以使用下面的两种方法。</p>
<ul>
<li><p>js 代码</p>
<pre><code>    
alert(null === undefined); //output "false"  
alert(typeof null == typeof undefined); //output "false"  
</code></pre>

</li>
</ul>
<p>使用typeof方法在前面已经讲过，null与undefined的类型是不一样的，所以输出”false”。而===代表绝对等于，在这里null === undefined输出false。</p>
<h4 id="二、判断"><a href="#二、判断" class="headerlink" title="二、判断"></a>二、判断</h4><p>####1. 判断undefiend</p>
<ol>
<li>利用typeof函数</li>
</ol>
<pre><code>    
var exp = undefined; 
if (typeof(exp) == "undefined"){  
  alert("undefined"); 
 } 
</code>
</pre>

<ol>
<li>利用 <code>===</code></li>
</ol>
<pre><code>    
var exp = undefined; 
if (exp === undefined){  
  alert("undefined"); 
 } 
</code>
</pre>

<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote>
<p>alert(null == undefined); //output “true”<br>alert(null === undefined); //output “false” </p>
</blockquote>
<h4 id="2-判断null"><a href="#2-判断null" class="headerlink" title="2. 判断null"></a>2. 判断null</h4><pre><code>    
var exp = null; 
if (exp === null) {
alert("exp is null");
}　
</code>
</pre>

<h4 id="3-判断NaN"><a href="#3-判断NaN" class="headerlink" title="3. 判断NaN"></a>3. 判断NaN</h4><pre><code>    
var parm= 0/0;  
if(isNaN(parm)){  
    alert("i am NaN");  
}
</code></pre>

<p><a href="http://www.cnblogs.com/mountain-mist/articles/1600995.html" target="_blank" rel="external">JS 中如何判断 undefined 和 null</a><br><a href="http://www.cnblogs.com/eastday/archive/2010/03/03/1677324.html" target="_blank" rel="external">JS中Null与Undefined的区别</a><br><a href="http://www.cnblogs.com/rookiebob/p/3888409.html" target="_blank" rel="external">聊一聊js中的null、undefined与NaN</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript常处理操作]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E5%B8%B8%E5%A4%84%E7%90%86%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="常见操作"><a href="#常见操作" class="headerlink" title="常见操作"></a>常见操作</h3><h4 id="一、数组去重"><a href="#一、数组去重" class="headerlink" title="一、数组去重"></a>一、数组去重</h4><p><a href="http://tingbuqing.com/javascript-delete-array.html" target="_blank" rel="external">JavaScript删除数组重复元素的5个高效算法</a></p>
<h4 id="二、合并相邻点"><a href="#二、合并相邻点" class="headerlink" title="二、合并相邻点"></a>二、合并相邻点</h4><h4 id="三、自己实现分页"><a href="#三、自己实现分页" class="headerlink" title="三、自己实现分页"></a>三、自己实现分页</h4><h4 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript常见函数]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<h3 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h3><ol>
<li>parseInt函数</li>
</ol>
<ol>
<li><p>setTimeout函数</p>
</li>
<li><p>try…catch</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript数组常见数组]]></title>
      <url>http://yoursite.com/2016/05/31/JavaScript%E6%95%B0%E7%BB%84%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h3 id="JavaScript-数组常用函数"><a href="#JavaScript-数组常用函数" class="headerlink" title="JavaScript 数组常用函数"></a>JavaScript 数组常用函数</h3><ol>
<li><p>数组的创建</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var arrayObj = new Array();　//创建一个数组</span><br><span class="line">var arrayObj = new Array([size]);　//创建一个数组并指定长度，注意不是上限，是长度 </span><br><span class="line">var arrayObj = new Array([element0[, element1[, ...[, elementN]]]]);　//创建一个数组并赋值</span><br></pre></td></tr></table></figure>
<p> <strong>用的比较多的是：var arrayObj = [];</strong>  </p>
</li>
<li><p>数组元素的添加</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arrayObj. push([item1);// 将一个或多个新元素添加到数组结尾，并返回数组新长度 </span><br><span class="line">arrayObj.unshift([item1]);// 将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度  </span><br><span class="line">arrayObj.splice(insertPos,0,[item1[, item2[, . . . [,itemN]]]]);//将一个或多个新元素插入到数组的指定位置，插入位置的元素自动后移，返回&quot;&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>数组元素的删除</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arrayObj.pop(); //移除最后一个元素并返回该元素值 </span><br><span class="line">arrayObj.shift(); //移除最前一个元素并返回该元素值，数组中元素自动前移 </span><br><span class="line">arrayObj.splice(deletePos,deleteCount); //删除从指定位置deletePos开始的指定数量deleteCount的元素，数组形式返回所移除的元素</span><br></pre></td></tr></table></figure>
</li>
<li><p>数组元素的截取和合并</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrayObj.slice(start, [end]); //以数组的形式返回数组的一部分，注意不包括 end 对应的元素，如果省略 end 将复制 start 之后的所有元素 </span><br><span class="line">arrayObj.concat([item1[, item2[, . . . [,itemN]]]]); //将多个数组（也可以是字符串，或者是数组和字符串的混合）连接为一个数组，返回连接好的新的数组</span><br></pre></td></tr></table></figure>
</li>
<li><p>数组的拷贝</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrayObj.slice(0); //返回数组的拷贝数组，注意是一个新的数组，不是指向 </span><br><span class="line">arrayObj.concat(); //返回数组的拷贝数组，注意是一个新的数组，不是指向</span><br></pre></td></tr></table></figure>
</li>
<li><p>数组元素的排序</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrayObj.reverse(); //反转元素（最前的排到最后、最后的排到最前），返回数组地址</span><br><span class="line">arrayObj.sort(); //对数组元素排序，返回数组地址</span><br></pre></td></tr></table></figure>
</li>
<li><p>数组元素的字符串化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arrayObj.join(separator); //返回字符串，这个字符串将数组的每一个元素值连接在一起，中间用 separator 隔开	</span><br><span class="line">toLocaleString 、toString 、valueOf：可以看作是join的特殊用法，不常用</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="http://www.cnblogs.com/qiantuwuliang/archive/2011/01/08/1930499.html" target="_blank" rel="external">js数组的操作</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Endnote使用记录]]></title>
      <url>http://yoursite.com/2016/05/30/Endnote%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><h3 id="安装和破解"><a href="#安装和破解" class="headerlink" title="安装和破解"></a>安装和破解</h3><ol>
<li>下载最新版的EndNote： <code>ENX7Inst_V17.4.0.8818_setup.1441785781</code>;</li>
<li>拷贝破解文件: <code>EndNote.exe</code>、<code>License.dat</code>到Endnote安装目录    <code>C:\Program Files (x86)\EndNote X7</code>;</li>
</ol>
<a id="more"></a>
<ol>
<li>在word 2007 中手工添加endnote加载项：<ul>
<li>word 左上角的word选项 → 信任中心 → 信任中心设置</li>
<li>受信任位置 → 找到 <code>C:\Users\chuang\AppData\Roaming\Microsoft\Word\Startup\</code> 选项，在exploer中打开这个地址，用于复制Endnote的模板.</li>
</ul>
</li>
<li>关闭所有的OFFICE系列软件;</li>
<li>找到 <code>C:\Program Files (x86)\Common Files\ResearchSoft\Cwyw\17</code>下面的四个文件:<code>EndNote Cwyw.dot</code>、<code>EndNote Cwyw.dotm</code>、<code>EndNote Online Cwyw.dot</code>、<code>EndNote Online Cwyw.dotm</code>拷贝到<code>C:\Users\chuang\AppData\Roaming\Microsoft\Word\Startup\</code> 下(如果有其他文件也一并拷贝过去)。</li>
<li><p>找到 <code>C:\Program Files (x86)\EndNote X7\Product-Support\CWYW \Cwyw_x64.dat</code>,将其后缀名改为rar,解压<code>Cwyw_x64.rar</code>,拷贝<code>EndNote Cwyw.dll</code>到 <code>C:\Users\chuang\AppData\Roaming\Microsoft\Word\Startup\</code> 下，并注册之。</p>
</li>
<li><p>重启Office 2007.</p>
</li>
</ol>
<h5 id="参考目录"><a href="#参考目录" class="headerlink" title="参考目录"></a>参考目录</h5><ul>
<li><a href="http://jingyan.baidu.com/article/77b8dc7fe913036174eab6cd.html" target="_blank" rel="external">Endote文件夹中找不到EndNote Cwyw.dll</a> </li>
<li><a href="http://jingyan.baidu.com/article/a378c960bf582db328283093.html" target="_blank" rel="external">word 2013如何添加破解EndNote X7</a></li>
</ul>
<hr>
<h3 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eclipse反编译]]></title>
      <url>http://yoursite.com/2016/05/27/Eclipse%E5%8F%8D%E7%BC%96%E8%AF%91/</url>
      <content type="html"><![CDATA[<ul>
<li>需要 <code>jad.exe</code> 和 <code>net.sf.jadclipse_3.3.0.jar</code>  </li>
</ul>
<h3 id="eclipse版本"><a href="#eclipse版本" class="headerlink" title="eclipse版本"></a>eclipse版本</h3><ol>
<li>JAD.exe 放入JDK bin下面</li>
<li>jar  放入  eclipse安装目录下 plugins</li>
</ol>
<a id="more"></a>
<ol>
<li>路径：preferences-java-jadclipse<ul>
<li>path to decompiler:jad.exe全路径</li>
<li>directory fro temporary files:临时文件路径</li>
</ul>
</li>
<li>class文件的默认打开方式，Eclipse-&gt;Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;File Associations  <ul>
<li>.class  和 .class without source 都要改成 jadClipse Class File Viewer(default)</li>
</ul>
</li>
</ol>
<hr>
<h3 id="Myeclipse版本"><a href="#Myeclipse版本" class="headerlink" title="Myeclipse版本"></a>Myeclipse版本</h3><ol>
<li><p>JAD.exe 放入JDK bin下面   </p>
</li>
<li><p>在myeclipse安装目录下的dropins中创建eclipse文件夹，然后在eclipse文件夹中分别创建features、plugins文 件夹，将net.sf.jadclipse_3.3.0.jar 分别拷贝到features和plugins文件夹中。</p>
</li>
<li>路径：preferences-java-jadclipse<ul>
<li>path to decompiler:jad.exe全路径</li>
<li>directory fro temporary files:临时文件路径</li>
</ul>
</li>
<li>class文件的默认打开方式，Eclipse-&gt;Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;File Associations  <ul>
<li>.class  和 .class without source 都要改成 </li>
<li>jadClipse Class File Viewer(default)</li>
</ul>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[markdown 精简版]]></title>
      <url>http://yoursite.com/2016/05/26/Markdown%20%E7%B2%BE%E7%AE%80%E7%89%88/</url>
      <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p> 加# 和空格</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加1. 2. 3. 符号要和文字之间加上一个字符的空格。</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>只需要在文本前加入 &gt; 这种尖括号（大于号）即可</p>
<a id="more"></a> 
<h2 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h2><p>插入链接与插入图片的语法很像，区别在一个 !号</p>
<p>图片为：<code>![](){ImgCap}{/ImgCap}</code></p>
<ul>
<li>如果不想使用图床，可以使用相对路径来显示图片。</li>
</ul>
<p>链接为：    <code>[]()</code></p>
<h2 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h2><p>Markdown 的粗体和斜体也非常简单，用两个<code>*</code>包含一段文本就是粗体的语法，用一个 <code>*</code> 包含一段文本就是斜体的语法。</p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><blockquote>
<p>| Tables        | Are           | Cool  | <br><br>| ————- |————- | —– | <br><br>| col 3 is      | right-aligned | $1600 | <br><br>| col 2 is      | centered      |   $12 | <br><br>| zebra stripes | are neat      |    $1 | <br></p>
</blockquote>
<h2 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h2><p>  如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown下实现也非常简单，只需要用两个 ` 把中间的代码包裹起来。图例：</p>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><ol>
<li>行首空4个空格</li>
<li>代码块包裹在 ``` 之间<br><a href="http://m.blog.csdn.net/article/details?id=50685187" target="_blank" rel="external">MarkdownPad 2 安装使用之二三事</a></li>
</ol>
<h4 id="使用-tab-键即可缩进。"><a href="#使用-tab-键即可缩进。" class="headerlink" title="使用 tab 键即可缩进。"></a>使用 tab 键即可缩进。</h4><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>分割线的语法只需要三个 * 号 </p>
<h2 id="段落首行缩进"><a href="#段落首行缩进" class="headerlink" title="段落首行缩进"></a>段落首行缩进</h2><ul>
<li><code>&amp;#160; &amp;#160; &amp;#160; &amp;#160;</code></li>
<li>全角空格，切换到全角模式下（一般的中文输入法都是按 shift + space）输入两个空格就行了。</li>
</ul>
<p><a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="external">Markdown——入门指南</a><br><a href="http://www.jianshu.com/p/9e5cd946696d" target="_blank" rel="external">MarkdownPad2.5 注册码</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git 精简版]]></title>
      <url>http://yoursite.com/2016/05/26/Git%20%E7%B2%BE%E7%AE%80%E7%89%88/</url>
      <content type="html"><![CDATA[<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init    //初始化</span><br><span class="line">git add     //添加文件到暂存区</span><br><span class="line">git commit  //提交更改，并备注</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git status  //查看工作区状态</span><br><span class="line">git diff    //查看修改  </span><br><span class="line">(1)  git log    // 查看历史记录</span><br><span class="line">(2)  git log --pretty=oneline  //精简版历史记录</span><br><span class="line">(3)  git reset --HEAD^    //返回上一个版本    HEAD指向当前版本   --&gt;reset也是操作本地版本，只有push、pull、fetch才能与远程有关</span><br><span class="line">(4)  cat readme.txt     //打印readme.txt 文件</span><br><span class="line">(5)  git reflog     //查看提交的每一次记录</span><br></pre></td></tr></table></figure>
<h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. (1)  git diff HEAD -- readme.txt   //查看工作区和版本库里面最新版本的区别</span><br><span class="line">2. (2)  git checkout -- readme.txt   //丢弃工作区的修改  &quot;只要add后，用checkout命令，就不会丢弃。&quot;</span><br><span class="line">   </span><br><span class="line">3. (3)  git reset HEAD ( -- )readme.txt    //丢弃暂存区的修改，放回到工作区</span><br><span class="line">4. (4)  git reset  -- HEAD^          //版本回退(这也是一种丢弃工作区的修改，不过这个可以回退到多个前面的版本，如HEAD^^) 前提是你没有推送到远程库 </span><br><span class="line">5. (1)  git rm test.txt           //删除提交到版本库中的文件 </span><br><span class="line">6. (1)  git remote add origin git@git.suncreate.com:yangliangchuang/MapTest.git  //关联本地库到远程库</span><br><span class="line">  (2)  git push -u origin master   //第一次推送本地库到远程库   远程库的名字是origin   master是本地库的名字</span><br><span class="line">  (3)  git push origin master  //非第一次提交 </span><br><span class="line">7. (1)  git clone git@git.suncreate.com:yangliangchuang/MapTest.git     //克隆一个本地库</span><br></pre></td></tr></table></figure>
<ol>
<li>(1)  git checkout -b dev   //相当于 (2)  (3) 拷贝单个分支 不指定分支，就默认拷贝master<br>(2)  git branch dev       //新建一个分支，git branch * 打印所有分支<br>(3)  git checkout dev<br>(4)  git merge dev     //合并分支<br>(5)  git branch -d dev  //删除分支<br>(6)  git log –graph –pretty=oneline –abbrev-commit    //打印commit历史记录图<br>(7)  git merge –no-ff -m “merge with no-ff” dev     //禁止”Fast forward”</li>
</ol>
<ol>
<li>(1)  git stash       //储存工作区修改<br>(2)  git stash list  //打印工作现场列表<br>(3)  git satsh pop   //相当于(4) 和 (5)<br>(4)  git stash apply   //恢复不删除stash内容<br>(5)  git stash drop    //删除stash内容</li>
</ol>
<p>10.(1)  git branch -D feature-vulcan  //强制删除特征分支</p>
<p>11.(1)  git checkout -b dev origin/dev   //创建远程origin的dev分支到本地<br>   (2)  git push origin dev    //推送本地dev分支<br>   (3)  git branch –set -upstream dev origin/dev   //设置本地分支和远程分支的连接</p>
<p>12.(1)  git tag v1.0  //添加标签<br>   (2)  git tag    //打印所有标签<br>   (3)  git show tagname //查看标签信息<br>   (4)  git tag -a v0.1 -m “version 0.1 released” 3628164    //-a 指定标签名 -m 指定说明文字<br>   (5)  git show v0.1   //查看说明文字<br>   (6)  git tag -s v0.2 -m “signed version 0.2 released”  fec145a   //通过-s用私钥签名一个标签<br>   (7)  git tag -d v0.1    //删除标签<br>   (8)  git push origin v1.0  //推送某个标签到远程<br>   (9)  git push origin –tags   //推送多个标签<br>   (10) git tag -d v0.9<br>        git push origin :refs/tags/v0.9   //删除远程推送标签</p>
<p>13.(1)git last   //最后一次提交代码</p>
<p>“容易混”:<br>(1)  git reset HEAD readme.txt   //已修改，并且add过后 → 把暂存区的修改撤销掉，注意撤销了还会将修改放到工作区<br>(2)  git checkout – readme.txt  //已修改，但是还没有add → 丢弃工作区的修改<br>(3)  git reset –head  HEAD^     //返回之前的版本</p>
<p> “冲突有两种”<br> (1)  merge时冲突： 打开文件，直接修改两个分支的冲突，然后merge;<br> (2)  推送分支的时候冲突：先git pull(远程版本较本地新，这是冲突类型之一),pull merge报错(代码有冲突，这是冲突类型之二)，先按照上面的方法来解决merge冲突，然后推送;<br>  “stash” 是解决冲突的方法之一，还有最原始的方法就是查看冲突文件，手动改;<br>   如果修改文件和pull的文件是同一个文件时，要把自己改的代码都提交了,才能pull!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git安装相关]]></title>
      <url>http://yoursite.com/2016/05/26/Git%20%E5%AE%89%E8%A3%85%E7%9B%B8%E5%85%B3/</url>
      <content type="html"><![CDATA[<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol>
<li>修改C：/Windows/System32/drivers/etc/hosts，添加DNS的域名解析。   <br><a id="more"></a> 
</li>
</ol>
<p>第一次改的时候，可能没权限，具体百度下，就可以改了，修改后的hosts文件如下（这里的比较多，单独的git的域名可以只加最后一句）：</p>
<pre><code>`192.168.97.35 git.suncreate.com  `
</code></pre><ol>
<li>默认安装git,然后点击git Bash，并自报家门：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Your name&quot;  </span><br><span class="line">git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>3.生成你的email对应的密钥:<br>    <code>$ ssh-keygen -t rsa -C 396986654@qq.com</code><br>     然后一路回车，到c盘对应目录下找到这个文件：<code>id_rsa.pub</code>（公钥）  +  <code>id_rsa</code> （私钥）然后打开，并输入到自己的git设置中。这样就可以用邮箱下载和上传项目了。</p>
<h4 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h4><ul>
<li>通过github的验证之后，还会在.ssh目录中生成一个<code>known_hosts</code>的文件，用于检测用户。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搭建环境的一些细节]]></title>
      <url>http://yoursite.com/2016/05/26/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82/</url>
      <content type="html"><![CDATA[<h4 id="创建e-blog-和-e-arther1228两个文件夹的作用"><a href="#创建e-blog-和-e-arther1228两个文件夹的作用" class="headerlink" title="创建e:/blog 和 e:/arther1228两个文件夹的作用"></a>创建e:/blog 和 e:/arther1228两个文件夹的作用</h4><ul>
<li>e/blog是存储hexo的主目录,这个目录并直接与github关联，而只是通过_config.yml里面的repository来把生成的页面与github关联</li>
<li>e/arther1228 是用来存储hexo生成的页面的地址</li>
</ul>
<h4 id="config-yml修改细节"><a href="#config-yml修改细节" class="headerlink" title="_config.yml修改细节"></a>_config.yml修改细节</h4><ul>
<li>type: git中间要有一个空格才行 </li>
<li>repository 可能只支持https(待定)</li>
</ul>
<h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><ul>
<li><a href="http://kaimingwan.com/post/others/hexo-blog-1" target="_blank" rel="external">hexo博客搭建完整教程2015（一）:环境准备</a></li>
<li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">开始使用Next主题</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[安装过程中的问题]]></title>
      <url>http://yoursite.com/2016/05/25/%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h2 id="代理未设置"><a href="#代理未设置" class="headerlink" title="代理未设置"></a>代理未设置</h2><figure class="highlight plain"><figcaption><span>MINGW64</span><a href="/e/blog">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> $ npm install -g hexo</span><br><span class="line"> npm ERR! Windows_NT 6.1.7601</span><br><span class="line"> npm ERR! argv &quot;C:\\Program Files\\nodejs\\node.exe&quot; &quot;C:\\Program Files\\nodejs\\        </span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;                                                                                                        node_modules\\npm\\bin\\npm-cli.js&quot; &quot;install&quot; &quot;-g&quot; &quot;hexo&quot;</span><br><span class="line"> npm ERR! node v4.4.5 </span><br><span class="line"> npm ERR! npm  v2.15.5 </span><br><span class="line"> npm ERR! code ENOTFOUND</span><br><span class="line"> npm ERR! errno ENOTFOUND</span><br><span class="line"> npm ERR! syscall getaddrinfo</span><br><span class="line"></span><br><span class="line">  npm ERR! network getaddrinfo ENOTFOUND registry.npmjs.org   </span><br><span class="line">registry.npmjs.org:443</span><br><span class="line">  npm ERR! network This is most likely not a problem with npm itself </span><br><span class="line">  npm ERR! network and is related to network connectivity.</span><br><span class="line">  npm ERR! network In most cases you are behind a proxy or have bad network settings.</span><br><span class="line">  npm ERR! network`</span><br><span class="line">  npm ERR! network If you are behind a proxy, please make sure that the</span><br><span class="line">  npm ERR! network &apos;proxy&apos; config is set properly.  See: &apos;npm help config&apos;</span><br><span class="line">  npm ERR! Please include the following file with any support request:E:\blog\npm-debug.log</span><br></pre></td></tr></table></figure>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p><code>$ npm config set registry http://registry.npmjs.org/</code></p>
<h2 id="在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错"><a href="#在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错" class="headerlink" title="在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错:"></a>在安装hexo的过程中，需要从github上面拷贝一个项目，结果在克隆的时候git报了个错:</h2><p><code>fatal: unable to access &#39;https://github.com/hexojs/hexo-starter.git&#39;: Protocol https not supported or disabled in libcurl</code></p>
<h3 id="解决办法-暂时"><a href="#解决办法-暂时" class="headerlink" title="解决办法(暂时)"></a>解决办法(暂时)</h3><p>将libcurl.dll 添加一个后缀名<br><code>C:\Windows\SysWOW64\libcurl.dll.old</code></p>
]]></content>
    </entry>
    
  
  
</search>
